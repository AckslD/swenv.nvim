*swenv.txt*Tiny plugin to quickly switch python virtual environments from within neovim without restarting.

==============================================================================
Table of Contents                                    *swenv-table-of-contents*

1. swenv.nvim                                               |swenv-swenv.nvim|
  - Installation                                          |swenv-installation|
  - Usage                                                        |swenv-usage|
  - Configuration                                        |swenv-configuration|

==============================================================================
1. swenv.nvim                                               *swenv-swenv.nvim*

Tiny plugin to quickly switch python virtual environments from within neovim
without restarting.

<div class="figure">
<img src="https://user-images.githubusercontent.com/23341710/191020632-543e8118-4eea-4964-8d59-1556836b929f.png" title="fig:"/>
<p class="caption">gscreenshot_2022-09-19-144438</p>
</div>

INSTALLATION                                              *swenv-installation*

For example using `packer` <https://github.com/wbthomason/packer.nvim>:

>
    use {
      'AckslD/swenv.nvim',
      config = 'require("swenv").setup()',
    }
<


USAGE                                                            *swenv-usage*

Call

>
    require('swenv.api').pick_venv()
<


to pick an environment. Uses `vim.ui.select` so a tip is to use eg
dressing.nvim <https://github.com/stevearc/dressing.nvim>.

To show the current venv in for example a status-line you can call

>
    require('swenv.api').get_current_venv()
<


For `lualine` there is already a configured component called `swenv`.

CONFIGURATION                                            *swenv-configuration*

Pass a dictionary into `require("swenv").setup()` with callback functions.
These are the defaults:

>
    require('swenv').setup({
      -- Should return a list of tables with a `name` and a `path` entry each.
      -- Gets the argument `venvs_path` set below.
      -- By default just lists the entries in `venvs_path`.
      get_venvs = function(venvs_path)
        return require('swenv.api').get_venvs(venvs_path)
      end,
      -- Path passed to `get_venvs`.
      venvs_path = vim.fn.expand('~/venvs'),
      -- Something to do after setting an environment
      post_set_venv = nil,
    })
<


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
